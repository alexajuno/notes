@startuml use-case-diagram
title Use Case Diagram for JAMC Platform

left to right direction

actor Student
actor Teacher
actor Administrator as Admin
actor OAuthProvider as "OAuth Provider" <<External System>>
actor PaymentGateway as "Payment Gateway" <<External System>>

actor User as AbstractUser <<abstract>> #lightblue
actor QAParticipant as AbstractQAParticipant <<abstract>> #lightblue

rectangle JAMC {

  usecase "Register and Login" as UC_RegisterAndLogin
  usecase "Reset Password" as UC_ResetPassword
  usecase "Manage Profile" as UC_ManageProfile

  usecase "Enroll in Class" as UC_EnrollInClass
  usecase "Access Module" as UC_AccessModule
  usecase "Purchase Module" as UC_PurchaseModule

  usecase "Post Question" as UC_PostQuestion
  usecase "Answer Question" as UC_AnswerQuestion
  usecase "Upvote/Downvote Answer" as UC_VoteAnswer
  usecase "Select Best Answer" as UC_SelectBestAnswer

  usecase "Track Progress" as UC_TrackProgress
  usecase "View Dashboard" as UC_ViewDashboard <<abstract>>
  usecase "View Student Dashboard" as UC_ViewStudentDashboard
  usecase "View Teacher Dashboard" as UC_ViewTeacherDashboard
  usecase "Earn Badges" as UC_EarnBadges

  usecase "Create Class" as UC_CreateClass
  usecase "Manage Class" as UC_ManageClass
  usecase "Schedule Class" as UC_ScheduleClass

  usecase "Create Module" as UC_CreateModule
  usecase "Monetize Module" as UC_MonetizeModule
  usecase "Manage Monetization Settings" as UC_ManageMonetization

  usecase "Moderate Q&A" as UC_ModerateQA
  usecase "Review Student Progress" as UC_ReviewStudentProgress

  usecase "Manage Platform Users" as UC_ManageUsers
  usecase "Moderate Content" as UC_ModerateContent
  usecase "Manage System Settings" as UC_ManageSystem
  usecase "View Reports" as UC_ViewReports

  usecase "Receive Notifications" as UC_ReceiveNotifications

  usecase "Authenticate User" as UC_AuthenticateUser
  usecase "Process Payments" as UC_ProcessPayments

}

' Abstract actor relationships
AbstractUser --> UC_RegisterAndLogin
AbstractUser --> UC_ResetPassword
AbstractUser --> UC_ManageProfile
AbstractUser --> UC_ReceiveNotifications

AbstractQAParticipant --> UC_PostQuestion
AbstractQAParticipant --> UC_AnswerQuestion
AbstractQAParticipant --> UC_VoteAnswer
AbstractQAParticipant --> UC_SelectBestAnswer

Student --> AbstractUser
Teacher --> AbstractUser
Admin --> AbstractUser

Student --> AbstractQAParticipant
Teacher --> AbstractQAParticipant

' Specific actor relationships
Student --> UC_EnrollInClass
Student --> UC_AccessModule
Student --> UC_PurchaseModule
Student --> UC_TrackProgress
Student --> UC_ViewStudentDashboard
Student --> UC_EarnBadges

Teacher --> UC_CreateClass
Teacher --> UC_ManageClass
Teacher --> UC_ScheduleClass
Teacher --> UC_CreateModule
Teacher --> UC_MonetizeModule
Teacher --> UC_ManageMonetization
Teacher --> UC_ModerateQA
Teacher --> UC_ReviewStudentProgress
Teacher --> UC_ViewTeacherDashboard

Admin --> UC_ManageUsers
Admin --> UC_ModerateContent
Admin --> UC_ManageSystem
Admin --> UC_ViewReports

OAuthProvider --> UC_AuthenticateUser
PaymentGateway --> UC_ProcessPayments

' Use case relationships
UC_RegisterAndLogin ..> UC_AuthenticateUser : <<include>>
UC_PurchaseModule ..> UC_ProcessPayments : <<include>>
UC_MonetizeModule ..> UC_ManageMonetization : <<include>>

UC_ViewStudentDashboard ..> UC_ViewDashboard : <<extend>>
UC_ViewTeacherDashboard ..> UC_ViewDashboard : <<extend>>

UC_AccessModule ..> UC_PurchaseModule : <<extend>> [if module is paid]

UC_TrackProgress ..> UC_EarnBadges : <<extend>>

@enduml
